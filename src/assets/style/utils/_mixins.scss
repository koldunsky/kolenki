@import './variables';

@mixin stretch($pos: absolute) {
  position: $pos;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
}

@mixin button-reset {
  background: none;
  border: none;
  font-family: inherit;
  cursor: pointer;
  font-size: inherit;
  margin: 0;
  padding: 0;
  outline: none;
  color: inherit;
}

@mixin button-base-styles {
  @include button-reset;

  border-radius: $border-radius;
  color: $button-color;
  background: $button-background;
  user-select: none;
  outline: none !important;
  cursor: pointer;

  &:active,
  &:focus {
    background: $button-background-active;
  }

  @include ifSupportsHover {
    &:hover {
      background: $button-background-active;
    }
  }

  @include inDarkMode {
    color: $button-color-dark;
    background: $button-background-dark;

    &:active,
    &:focus {
      background: $button-background-dark-active;
    }

    @include ifSupportsHover {
      &:hover {
        background: $button-background-dark-active;
      }
    }
  }
}

@mixin button-accent-base-styles {
  background: $button-accent-background;
  color: $button-accent-color;

  &:active,
  &:focus {
    background: $button-accent-background-active;
  }

  @include ifSupportsHover {
    &:hover {
      background: $button-accent-background-active;
    }
  }

  @include inDarkMode {
    background: $button-accent-background-dark;
    color: $button-accent-color-dark;

    &:active,
    &:focus {
      background: $button-accent-background-active-dark;
    }

    @include ifSupportsHover {
      &:hover {
        background: $button-accent-background-active-dark;
      }
    }
  }
}

@mixin page {
  flex: 1 1;
  overflow: auto;
  height: 100%;

  .app_has-3-words & {
    height: 100%;
  }
}

@mixin page-inner {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  padding: 4.5rem 2.5rem 2.5rem;
  min-height: 100%;
}

@mixin link {
  color: $coral-default;

  &:active {
    color: $coral-default-active;
  }

  @include inDarkMode {
    color: $coral-default-dark;

    &:active {
      color: $coral-default-dark-active;
    }
  }
}

@mixin cross-icon($cross-width: .8rem, $size: 2rem) {
  @include button-reset;
  color: $green-800;
  width: $size;
  height: $size;
  position: relative;
  display: inline-block;
  @include inDarkMode {
    color: inherit;
  }

  &:active {
    color: $coral-default;

    @include inDarkMode {
      color: $coral-default-dark;
    }
  }


  @include ifSupportsHover {
    &:hover {
      color: $coral-default;

      @include inDarkMode {
        color: $coral-default-dark;
      }
    }
  }

  &::before,
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: calc(50% - #{$cross-width / 2});
    width: $cross-width;
    height: .1rem;
    background: currentColor;
  }

  &::after {
    transform: rotateZ(45deg);
  }
  &::before {
    transform: rotateZ(-45deg);
  }
}

@mixin mediaSmallHeight {
  @media (min-height: 320px) {
    @content;
  }
}

@mixin mediaTablet {
  @media (min-width: 700px) {
    @content;
  }
}

@mixin mediaDesktop {
  @media (min-width: 1100px) {
    @content;
  }
}

@mixin inDarkMode {
  @media (prefers-color-scheme: dark) {
    html:not(.light-mode) & {
      @content;
    }
  }
  html.dark-mode:not(.light-mode) & {
    @content;
  }
}

@mixin ifSupportsHover {
  @media (hover: hover) {
    @content
  }
}
